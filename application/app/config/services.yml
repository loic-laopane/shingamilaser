# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    max_result_page: 10

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    AppBundle\Manager\UserManager:
        public: true
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@security.password_encoder'

    AppBundle\Manager\CustomerManager:
        public: true

    AppBundle\Manager\PurchaseManager:
        public: true
        arguments:
            - '%api_base_uri%'
            - '@workflow.purchase'


    AppBundle\Event\Listener\LoginListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request}

    AppBundle\Event\Subscriber\UploadAvatarSubscriber:
        tags:
            - { name: doctrine.event_subscriber}

    AppBundle\Event\Listener\RegisterListener:
        arguments:
            - '%mailer_sender_address%'
        tags:
            - { name: kernel.event_listener, event: register.event, method: onRegistration }

    AppBundle\Event\Listener\RequestPasswordListener:
        arguments:
            - '%mailer_sender_address%'
        tags:
            - { name: kernel.event_listener, event: forgotten.event, method: onRequestPassword }
            - { name: kernel.event_listener, event: change_password.event, method: onChangePassword }

    AppBundle\Event\Listener\OfferListener:
        arguments:
            - '%mailer_sender_address%'
        tags:
            - { name: kernel.event_listener, event: offer.unlockable.event, method: onOfferUnlockable }
            - { name: kernel.event_listener, event: offer.unlocked.event, method: onOfferUnlocked }